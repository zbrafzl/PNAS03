@{
    ViewBag.Title = "Applicant List";
    Layout = "~/Areas/nadmin/Views/Shared/_Layout.cshtml";
}
@model Prp.Sln.ApplicantStatusModel
@section RenderCss{

    <style>
        .imgView {
            height: 50px;
            width: 45px;
        }
    </style>

}
@section RenderScript{

    <script>
        var countryTypeId = 0, perPageRecords = 10, statusId = 0, statusTypeId = 0
            , pageNum = 1, totalCount = 0, obj = {}, inductionId = 0;
        $(document).ready(function () {

            statusId = ConvertToInt($("#hfdStatusId").val());
            inductionId = ConvertToInt($("#hfdInductionId").val());
            $("#ddlStatus").val(statusId);

            SearchApplicant();

            if (![151, 152, 153, 161, 191, 192, 197, 198, 201, 202].includes(ConvertToInt($("#hfdInductionId").val()))) {
                $("#divDownload").hide().change();
            }
            else {
                $("#divDownload").show().change();
            }
            

            $('#exportButton').click(function () {
                // Get the values of the hidden fields
                var id1 = ConvertToInt($("#hfdInductionId").val());
                var id2 = ConvertToInt($("#hfdStatusTypeId").val());
                var id3 = ConvertToInt($("#hfdStatusId").val());
                var id4 = ConvertToInt($("#hfdPhaseId").val());
                var id5 = ConvertToString($("#txtSearch").val());

                // Make AJAX request to controller action with all three IDs
                

                var resp = CallActionGet("/ApplicantAdmin/GetDataForExport?inductionId=" + id1 + "&statusTypeId=" + id2 + "&statusId=" + id3 + "&phaseId=" + id4 +"&option="+id5);

                exportToExcel(resp);

                debugger;

            });

            $(document).on('click', '.tbRow', function () {
                //alert(userTypeId);
                if (userTypeId != 69) {

                    var applicantId = ConvertToInt($(this).attr("id"));

                    var statusTypeId = ConvertToInt($("#hfdStatusTypeId").val())

                    var url = "";
                    if (statusTypeId == 74) {

                        url = "/admin/voucher-detail?applicantId=" + applicantId;
                    }
                    else {

                        url = "/admin/applicant-detail-induction-" + inductionId + "?key=applicantId&value=" + applicantId;

                    }
                    window.open(url, '_blank');
                }
                else {
                    var url = "";
                    var applicantId = ConvertToInt($(this).attr("id"));
                    url = "/admin/applicant-verification-nursing?applicantId=" + applicantId;
                    window.open(url, '_blank');
                }
            });


            $(document).on('click', '#btnSearch', function () {
                $("#divDownload").hide();
                SearchApplicant();
                $("#divDownload").show();
            });

            $(document).keypress(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    $("#divDownload").hide();
                    SearchApplicant();
                    $("#divDownload").show();
                }
            });

            $(document).on('click', '.liPage', function () {

                var id = ConvertToInt($(this).closest('li').attr("id"));

                $(".liclick").removeClass("current");

                var pageNo = id;// ConvertToInt($(this).val());

                if (pageNo == 0) {

                    if ($(this).attr("type") == "first") {

                        pageNo = 1;
                    }
                    else
                        if ($(this).attr("type") == "last") {

                            var lastPage = Math.ceil(totalCount / perPageRecords);
                            pageNo = lastPage;
                        }
                }
                pageNum = pageNo;

                SearchApplicant();

            });

        });

        function downloadExcelFromJson(jsonData, fileName) {
            // Convert JSON data to CSV format
            const csvContent = jsonToCsv(jsonData);

            // Create a Blob object from the CSV data
            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });

            // Create a link element to trigger the download
            const link = document.createElement('a');
            if (link.download !== undefined) { // feature detection
                // Create a link that points to the Blob URL
                const url = URL.createObjectURL(blob);
                link.setAttribute('href', url);
                // Set the download attribute (filename)
                link.setAttribute('download', fileName + '.csv');
                // Append the link to the body
                document.body.appendChild(link);
                // Trigger the download by simulating a click
                link.click();
                // Remove the link from the DOM
                document.body.removeChild(link);
            } else {
                console.error("Downloading is not supported in this browser.");
            }
        }

        function exportToExcel(data) {
            // Convert JSON data to Excel format
            // For simplicity, let's assume data is already in Excel format
            // You can replace this with appropriate code to format and export data
            // Example:
            var blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
            var link = document.createElement('a');
            link.href = window.URL.createObjectURL(blob);
            link.download = 'data.xlsx';
            link.click();
        }

        function SearchApplicant() {

            var rowHtml = "";

            //$("#divDownload").hide();

            $("#tbPanel").html("");

            obj = {};
            obj.top = perPageRecords;
            obj.pageNum = pageNum;
            obj.statusTypeId = ConvertToInt($("#hfdStatusTypeId").val());
            //obj.statusId = ConvertToInt($("#ddlStatus").val());
            obj.statusId = @Convert.ToInt32(Session["SelectedStatusID"]);
            obj.inductionId = ConvertToInt($("#hfdInductionId").val());
            obj.phaseId = ConvertToInt($("#hfdPhaseId").val());
            obj.search = ConvertToString($("#txtSearch").val());
            //alert('clicked');
            var url = "/ApplicantAdmin/ApplicantSearchSimple";

            var list = CallActionPost(url, obj);

            var html = "";

            var singleHtml = "", objItem = {};

            if (obj.statusTypeId != 131) {
                $(".displayComments").hide();
            }


            if (list != null && list.length > 0) {

                totalCount = list[0].totalCount;


                //$("#divDownload").show();
                rowHtml = $("#tbTempHtml").html();

                for (var i = 0; i < list.length; i++) {

                    objItem = list[i];
                    singleHtml = rowHtml;

                    //var _date = new Date(objItem.dated);
                    //dated = ToDateFormatDDMMYYY(_date);

                    if (objItem.levelName == "11") {
                        objItem.levelName = "02 Years Post RN";
                    }
                    else if (objItem.levelName == "12") {
                        objItem.levelName = "1 Year Diploma";
                    }
                    else if (objItem.levelName == "13") {
                        objItem.levelName = "BSN Generic";
                    }

                    html = html + singleHtml.replace(/{#rowNum#}/g, objItem.rowNum)
                        .replace(/{#applicantId#}/g, objItem.applicantId)
                        .replace(/{#pic#}/g, objItem.pic)
                        .replace(/{#name#}/g, objItem.name)
                        .replace(/{#pmdcNo#}/g, objItem.pmdcNo)
                        .replace(/{#emailId#}/g, objItem.emailId)
                        .replace(/{#contactNumber#}/g, objItem.contactNumber)
                        .replace(/{#facultyName#}/g, objItem.levelName)
                        .replace(/{#dated#}/g, objItem.dated)
                        .replace(/{#status#}/g, objItem.status)
                        .replace(/{#dateStatus#}/g, objItem.dateStatus)
                        .replace(/{#comments#}/g, objItem.comments);
                }

                $("#tblPanel").show();
                $("#tbPanel").html(html);

                if (totalCount > 0)
                    CreatePaginationHtml(perPageRecords, totalCount, pageNum);
            }
            else {

                $("#tblPanel").hide();
                $("#tbPanel").html("");
            }

        }

        function SetValueAndValidateForm(event) {

            var isOk = true;

            if (isOk == false)
                event.preventDefault();
        }

        function ShowingRowsText(perPageRecords, count, pageNum) {

            var rcordsNow = pageNum * perPageRecords;
            var startRecords = rcordsNow - perPageRecords;
            if (rcordsNow > count)
                rcordsNow = count;

            startRecords = startRecords + 1;
            $("#divShowingResult").html("Showing " + startRecords + " to " + rcordsNow + " of " + count + " entries");


        }

        function CreatePaginationHtml(perPageRecords, count, pageNum) {



            try {

                ShowingRowsText(perPageRecords, count, pageNum);
                $("#divPagination").show();

                var htmlPagination = $("#templatePagination").html();
                var pageStart = 1, pageEnd = 5;
                var lastPage = Math.ceil(count / perPageRecords);

                if (pageNum > 3) {
                    pageStart = pageNum - 2;
                    pageEnd = pageNum + 2;
                }

                if (pageEnd > lastPage)
                    pageEnd = lastPage;

                var lisHtml = "";
                for (var i = pageStart; i <= pageEnd; i++) {
                    lisHtml = lisHtml + "<li class='liPage' id='" + i + "'> " + i + "</li>";
                }
                htmlPagination = htmlPagination.replace(/{#lastPage#}/g, lastPage).replace(/{#Pagination#}/g, lisHtml);
                $(".list_pagination").html(htmlPagination);

                $("#" + pageNum).addClass("current");



            } catch (e) {
                $("#liPagination").hide();
            }
        }

    </script>
}

<div class="col-md-12 col-sm-12  ">
    <div class="x_panel">
        @Html.HiddenFor(m => m.statusTypeId, new { @id = "hfdStatusTypeId" })
        @Html.HiddenFor(m => m.statusId, new { @id = "hfdStatusId" })
        @Html.HiddenFor(m => m.inductionId, new { @id = "hfdInductionId" })
        @Html.HiddenFor(m => m.loggedInUser.userId, new { @id = "hfdPhaseId" })
        <div class="x_title">
            <h2>Applicant List </h2>
            <div class="clearfix"></div>
        </div>
        <form class="form-horizontal form-label-left input_mask">
            <div class="form-group col-lg-12">

                <div class="col-md-7 col-sm-7 col-xs-7">
                    <label for="heard">Search :</label>
                    <input type="text" id="txtSearch" name="txtSearch" placeholder="Name, CNIC, Applicant Number" class="form-control" />
                </div>
                <div class="col-md-2 col-sm-2 col-xs-2">
                    <label for="heard" style="width:100%;">&nbsp;</label>
                    <input type="button" id="btnSearch" name="btnSearch" value="Search" class="btn btn-success" />
                </div>
                @if (Model.loggedInUser.typeId != 69)
                {
                    <div class="col-md-2 col-sm-2 col-xs-2" style="display:none" id="divDownload">
                        <label for="heard" style="width:100%;">&nbsp;</label>
                        <input type="button" id="exportButton" value="Export to Excel" class="btn btn-success" />
                    </div>
                }
            </div>
            <div class="clearfix"></div>
            <div class="ln_solid"></div>
        </form>
        <div class="x_content">
            <div class="table-responsive">
                <table id="tblPanel" class="table table-striped jambo_table bulk_action" style="display:none;">
                    <thead>
                        <tr class="headings">
                            <th class="column-title">Sr. </th>
                            <th class="column-title">Pic </th>
                            <th class="column-title">ID </th>
                            <th class="column-title">Name </th>
                            <th class="column-title">PMDC </th>
                            <th class="column-title">Email </th>
                            <th class="column-title">Number </th>
                            <th class="column-title">Applied For</th>
                            <th class="column-title">Status </th>
                            <th class="column-title displayComments">Comments </th>
                            <th class="column-title">Dated </th>
                            <th class="column-title">Status Date </th>

                        </tr>
                    </thead>
                    <tbody id="tbPanel">
                    </tbody>
                </table>
                <div id="divPagination" style="display:none;">
                    <div id="msgPagination" class="col-md-4">
                        <div class="dataTables_info" id="divShowingResult">
                            Showing
                            <span id="shStart"> </span> to <span id="shEnd"> </span> of <span id="shTotal"></span>
                            entries
                        </div>
                    </div>
                    <div id="liPagination" class="col-md-8">
                        <ul class="list_pagination">
                        </ul>
                    </div>
                    <ul id="templatePagination" style="display:none;">
                        <li class='liPage' id='0' type="first"> First Page</li>
                        {#Pagination#}
                        <li class='liPage' id='0' type="last"> Last Page</li>
                    </ul>
                </div>
                <div style="display:none;">
                    <table>
                        <tbody id="tbTempHtml">
                            <tr class="tbRow" id="{#applicantId#}">
                                <td>{#rowNum#}</td>
                                <td>
                                    <img class="imgView" src="/Images/Applicant/{#applicantId#}/{#pic#}" />
                                    <a class="ank" href="/Images/Applicant/{#applicantId#}/{#pic#}" target="_blank" title="Click to view"></a>
                                </td>
                                <td>{#applicantId#}</td>
                                <td>{#name#}</td>
                                <td>{#pmdcNo#}  </td>
                                <td>{#emailId#}</td>
                                <td>{#contactNumber#}</td>
                                <td>{#facultyName#}</td>
                                <td>{#status#} </td>
                                <td class="displayComments">{#comments#}</td>
                                <td>{#dated#}  </td>
                                <td>{#dateStatus#}</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>